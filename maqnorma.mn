// limpa variável
operation clear(A){
 1: if zero A then goto 0 else goto 2
 2: do dec A goto 1
}

// A += B; B := 0 (soma destrutiva)
operation soma(A,B) {
  1: if zero B then goto 0 else goto 2
  2: do dec B goto 3
  3: do inc A goto 1
}

// A+=B (soma não-destrutiva)
operation soma(A,B,C){
  1: if zero B then goto 5 else goto 2
  2: do dec B goto 3
  3: do inc A goto 4
  4: do inc C goto 1
  5: if zero C then goto 0 else goto 6
  6: do dec C goto 7
  7: do inc B goto 5
}

// A:=B usando C (atribuição não-destrutiva)
operation load(A,B,C){
  1: do clear(A) goto 2
  2: do soma(A,B,C) goto 0
}

operation subt(A,B,C) {
  1: if zero B then goto fim_loop else goto 2
  2: do dec B goto 3
  3: do dec A goto 4
  4: do inc C goto 1
  fim_loop: do move(B,C) goto 0
}

test menorQue(A,B,C,D) {
  1: do load(C,B,D) goto 2
  2: do subt(C,A,D) goto 3
  3: if zero C then goto false else goto limpar
  limpar: do clear(C) goto true
}

operation mult(A,B,C,D) {
  1: do load(C,A) goto 2
  2: if zero C then goto 0 else goto 3
  3: do soma(A,B,D) goto 4
  4: do dec C goto 1
}

operation div(A,B,C,D,E) {
  1: if zero B then goto 2 else goto 3
  2: do clear(A) goto 0
  3: do load(C,A) goto 4
  4: do clear(A) goto loop
  loop: if menorQue(C,B,D,E) then goto loop_1 else goto fim_loop
  loop_1: do subt(C,B,D) goto loop_2
  loop_2: do inc A goto loop
  fim_loop: do clear(C) goto 0
}

test divBy(A,B,C,D,E,F) {
  1: if zero B then goto false else goto 2
  2: if zero A then goto true else goto 3
  3: do load(C,A,D) goto loop
  loop: if menorQue(B,C,D,E) then goto loop_1 else goto fim_loop
  loop_1: do subt(C,B,D) goto loop
  fim_loop: if menorQue(C,B,D,E) then goto fim_false else goto fim_true
  fim_true: do clear(C) goto true
  fim_false: do clear(C) goto false
}


test primo(A,B,C,D,E,F,G) {
  1: do load(B,A,D) goto 2
  2: do clear(C) goto loop

  loop: if zero B then goto fim_loop else goto loop_1
  loop_1: if divBy(A,B,D,E,F,G) then goto loop_2 else goto loop_3
  loop_2: do inc C goto loop_3
  loop_3: do dec B goto loop

  fim_loop: if cmp C 2 then goto fim_true else goto fim_false
  fim_true: do clear(C) goto true
  fim_false: do clear(C) goto false
}

main {
  1: if primo(X,A,B,C,D,E,F) then goto 2 else goto 0
  2: do inc Y goto 0
}